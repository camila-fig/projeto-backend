<h1>Lista de Produtos</h1>

<div>
    <input type="text" id="search" placeholder="Qual produto deseja encontrar?">
    <button id="searchButton">Buscar</button>
</div>

<div class="page-products">
    {{#each products}}
    <div class="container-product">
        <p>Categoria: {{category}}</p>
        <img src="http://localhost:8080/image/{{thumbnail}}" alt="Imagem do Produto" width="50px" />
        <p class="product-name">{{title}}</p>
        <p>Preço R$ {{price}}</p>
        <br>
        <button class="viewProduct" data-id="{{_id}}">Ver produto</button>
    </div>
    {{/each}}

    <div class="numeracao-pagina">
        <p class="nao-aparecer">{{result.hasNextPage}}</p>
        <button id="previousButton">Anterior</button>
        <p>Página: {{result.pagingCounter}} de {{result.totalPages}}</p>
        <button id="nextButton">Próxima</button>
    </div>
</div>

<script>
    const searchInput = document.getElementById('search')
    const searchButton = document.getElementById('searchButton')
    const viewProducts = document.querySelectorAll('.viewProduct')
    const previousButton = document.getElementById('previousButton')
    const nextButton = document.getElementById('nextButton')

    searchButton.addEventListener('click', () => {
        const searchQuery = searchInput.value.trim()
        console.log("Search Query:", searchQuery)
        if (searchQuery) {
            window.location.href = `/products/${searchQuery}/1/1`
        }
    })

    viewProducts.forEach(button => {
        button.addEventListener('click', async () => {
            const addProduct = button.getAttribute('data-id')
            //console.log("PID selecionado:", addProduct)
            window.location.href = `/products/${addProduct}`
        })
    })

    // Desabilitar botões de navegação se não houver próxima ou anterior página
    if (!{{ result.hasNextPage }}) {
        nextButton.disabled = true
    }
    if (!{{ result.hasPrevPage }}) {
        previousButton.disabled = true
    }

    // Redirecionamento inicial, com controle para evitar loop
      window.onload = function() {
        const hasRedirected = sessionStorage.getItem('hasRedirected')

        if (!hasRedirected) {
          const url = `http://localhost:8080/products/all/1/10`
          sessionStorage.setItem('hasRedirected', 'true')
          window.location.href = url
        }
      }

      // Função para redirecionar para a próxima página
      nextButton.addEventListener('click', () => {
        const searchQuery = window.location.pathname.split('/')[2]
        if ({{result.hasNextPage}}) {
          const url = `http://localhost:8080/products/${encodeURIComponent(searchQuery)}/{{result.nextPage}}/{{result.limit}}`
          window.location.href = url
        }
      })

      // Função para redirecionar para a página anterior
      previousButton.addEventListener('click', () => {
        const searchQuery = window.location.pathname.split('/')[2]
        if ({{result.hasPrevPage}}) {
          const url = `http://localhost:8080/products/${encodeURIComponent(searchQuery)}/{{result.prevPage}}/{{result.limit}}`
          window.location.href = url
        }
      })
</script>